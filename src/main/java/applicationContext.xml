<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">
           
    <!--由CC配置！ -->
    <!--AOP切面拦截 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <context:annotation-config/>
    
    <bean id="cacheableCacheInterceptor" class="com.shch.cache.interceptor.CacheableCacheInterceptor">
        <property name="cacheOperation" ref="cacheOperation"></property>
    </bean>
    <bean id="cachePutCacheInterceptor" class="com.shch.cache.interceptor.CachePutCacheInterceptor">
        <property name="cacheOperation" ref="cacheOperation"></property>
    </bean>
    <bean id="cacheEvictCacheInterceptor" class="com.shch.cache.interceptor.CacheEvictCacheInterceptor">
        <property name="cacheOperation" ref="cacheOperation"></property>
    </bean>
         
     <bean id="cacheOperation" class="com.shch.cache.mapping.CacheOperation">
       <property name="cacheMapping" ref="cacheMapping"></property>
    </bean> 
     
    <bean id="compositeCacheManager" class="com.shch.cache.support.CompositeCacheManager" init-method="loadCache">
       <property name="cacheManagers">
         <list>
           <bean id="concurrentHashMapCacheManager" class="com.shch.cache.ShchCacheManager.ConcurrentHashMapCacheManager"
                 init-method="loadCacheMap">
             <property name="cacheList">
               <list>
                  <bean id="concurrentHashMapCache1"  class="com.shch.cache.ShchCache.ConcurrentHashMapCache">
                       <constructor-arg value="concurrentHashMap1"/>
                  </bean>             
                  <bean id="concurrentHashMapCache2"  class="com.shch.cache.ShchCache.ConcurrentHashMapCache">
                        <constructor-arg value="concurrentHashMap2"/>
                  </bean>     
                  <!-- 可以再多配置几个Cache实例 -->             
              </list>      
            </property>   
           </bean>
           
           <!-- 可以再多配置几个CacheManager实例 ，如redisCacheManager,memcahcedCacheManager等-->
         
         </list>       
       </property>         
   </bean>
    
	<bean id="cacheMapping" class="com.shch.cache.mapping.CacheMapping" >
       <property name="propertyConfigurer" ref="propertyConfigurer"></property>
	   <property name="compCacheManager" ref="compositeCacheManager"></property>
	</bean>

  	<bean id="propertyConfigurer" class="com.shch.cache.mapping.config.PropertyConfigurer">
  	   <property name="locations">
  	   <list>
  	   <!-- 可以配置多个.properties文件 -->
  	     <value>classpath:application.properties</value>
  	   </list>
  	   </property>
  	</bean>
    <!--初始化方法init-method -->
    <bean id="cacheScheduleUpdateJob" class="com.shch.cache.update.CacheScheduleUpdateJob" init-method="updateCache"></bean>
    <bean id="stringSplitter" class="com.shch.cache.support.StringSplitter"></bean>
  
    <!-- *************************以上为缓存框架定义*********************************** -->
    
    <!-- 需要用户定义 -->
    <!-- 注解缓存的使用类 -->
    <bean id="cacheDemo" class="com.shch.CacheDemo"/>   
    <!-- 定义具体任务执行类 -->
	<bean id="cacheScheduleUpdate1" class="com.shch.CacheScheduleUpdate1"></bean>
	<bean id="cacheScheduleUpdate2" class="com.shch.CacheScheduleUpdate2"></bean>
			
</beans>

